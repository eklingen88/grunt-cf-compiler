AWSTemplateFormatVersion: 2010-09-09
Description: Loading balancing using three load balancers to provide traffic from Route 53
  and static IP address.
Parameters:
  VPC:
    Type: AWS::EC2::VPC::Id
  PublicSubnet1:
    Type: AWS::EC2::Subnet::Id
  PublicSubnet2:
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet1:
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2:
    Type: AWS::EC2::Subnet::Id
  ExternalNlbEip1:
    Type: String
    AllowedPattern: eipalloc-[0-9a-f]+
    Description: Allocation ID for Elastic IP to be used for the Network Load Balancer in
      PublicSubnet1 (e.g. epialloc-08220b81762050e32)
Resources:
  HttpTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Protocol: TCP
      Port: 80
      TargetType: ip
      HealthCheckIntervalSeconds: 10
      HealthCheckProtocol: HTTP
      HealthCheckPort: traffic-port
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      VpcId:
        Ref: VPC
  ExternalNLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: network
      Scheme: internet-facing
      SubnetMappings:
        - AllocationId:
            Ref: ExternalNlbEip1
          SubnetId:
            Ref: PublicSubnet1
  HttpListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn:
        Ref: ExternalNLB
      Port: 80
      Protocol: TCP
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: HttpTargetGroup
  ExternalAlb:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      Scheme: internet-facing
      Subnets:
        - Ref: PublicSubnet1
        - Ref: PublicSubnet2
  InternalAlb:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      Scheme: internal
      Subnets:
        - Ref: PrivateSubnet1
        - Ref: PrivateSubnet2
  HttpsListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn:
        Ref: ExternalNLB
      Port: 443
      Protocol: TCP
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: HttpsTargetGroup
  HttpsTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Protocol: TCP
      Port: 443
      TargetType: ip
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: TCP
      HealthCheckPort: traffic-port
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      VpcId:
        Ref: VPC
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Code:
        S3Bucket: my-cloud-bucket
        S3Key: lambda/build/alb_tg_manager.zip
      Role:
        Fn::GetAtt:
          - LambdaRole
          - Arn
      Runtime: python2.7
      Environment:
        Variables:
          HTTP_TG_ARN:
            Ref: HttpTargetGroup
          HTTPS_TG_ARN:
            Ref: HttpsTargetGroup
          ALB_ARN:
            Ref: InternalAlb
          REGION:
            Ref: AWS::Region
          S3_BUCKET: my-cloud-bucket
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
  CloudWatchPublishPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CloudWatchPublish
      Roles:
        - Ref: LambdaRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - cloudwatch:putMetricData
            Resource:
              - "*"
  S3ReadWritePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: S3ReadWrite
      Roles:
        - Ref: LambdaRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:Get*
              - s3:PutObject
              - s3:CreateBucket
              - s3:ListBucket
              - s3:ListAllMyBuckets
            Resource:
              - "*"
  LogPublishPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: LogPublish
      Roles:
        - Ref: LambdaRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - arn:aws:logs:*:*:*
  ElbTargetManagerPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ElbTargetManager
      Roles:
        - Ref: LambdaRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - elasticloadbalancing:DescribeSSLPolicies
              - elasticloadbalancing:DescribeTags
              - elasticloadbalancing:RegisterTargets
              - elasticloadbalancing:DeregisterTargets
              - elasticloadbalancing:DescribeLoadBalancerAttributes
              - elasticloadbalancing:DescribeLoadBalancers
              - elasticloadbalancing:DescribeTargetGroupAttributes
              - elasticloadbalancing:DescribeListeners
              - elasticloadbalancing:DescribeAccountLimits
              - elasticloadbalancing:DescribeTargetHealth
              - elasticloadbalancing:DescribeTargetGroups
              - elasticloadbalancing:DescribeListenerCertificates
              - elasticloadbalancing:DescribeRules
            Resource:
              - "*"
  CloudWatchTrigger:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(1 minute)
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - LambdaFunction
              - Arn
          Id: LambdaTargetFunction
  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: LambdaFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - CloudWatchTrigger
          - Arn
Outputs:
  ExternalAlb:
    Description: ARN of the External ALB
    Value:
      Ref: ExternalAlb
    Export:
      Name:
        Fn::Join:
          - ":"
          - - Ref: AWS::StackName
            - ExternalAlb
  InternalAlb:
    Description: ARN of the Internal ALB
    Value:
      Ref: InternalAlb
    Export:
      Name:
        Fn::Join:
          - ":"
          - - Ref: AWS::StackName
            - InternalAlb
